#!@SH@
# $NetBSD$

. @PBULK_CONFIG@

set -e

if [ "${config_version}" != "@PBULK_CONFIG_VERSION@" ]; then
	echo "Your configuration has version ${config_version}."
	echo "This version of pbulk expects version @PBULK_CONFIG_VERSION@."
	exit 1
fi

#
# The purpose here is to reduce and consolidate the scan_* and build_*
# variables down to a single cleanup command per required host.
#

#
# First consolidate the list of clients.
#
unique_clients=
for client in ${scan_clients} ${build_clients}; do
	case ${unique_clients} in
	"${client}" | "${client} "* | *" ${client} "* | *" ${client}" )
		: # exists already
		;;
	*)
		if [ -n "${unique_clients}" ]; then
			unique_clients="${unique_clients} ${client}"
		else
			unique_clients="${client}"
		fi
		;;
	esac
done

#
# Next, cleanup up each client, both for scanning and building.
#
for client in ${unique_clients}; do

	#
	# This is a little janky, but we need to go back and determine whether
	# this unique client is a scan or build so we can then dig out its
	# chroot configuration.  We can then build up a list of unique chroots
	# to cleanup on it.
	#
	unique_chroots=
	if [ -n "${scan_chroots}" ]; then
		case ${scan_clients} in
		"${client}" | "${client} "* | *" ${client} "* | *" ${client}" )
			for chroot in ${scan_chroots}; do
				case ${unique_chroots} in
				"${chroot}" | "${chroot} "* | *" ${chroot} "* | *" ${chroot}" )
					: # exists already
					;;
				*)
					if [ -n "$unique_chroots" ]; then
						unique_chroots="${unique_chroots} ${chroot}"
					else
						unique_chroots="${chroot}"
					fi
					;;
				esac
			done
			;;
		esac
	fi
	if [ -n "${build_chroots}" ]; then
		case ${build_clients} in
		"${client}" | "${client} "* | *" ${client} "* | *" ${client}" )
			for chroot in ${build_chroots}; do
				case ${unique_chroots} in
				"${chroot}" | "${chroot} "* | *" ${chroot} "* | *" ${chroot}" )
					: # exists already
					;;
				*)
					if [ -n "$unique_chroots" ]; then
						unique_chroots="${unique_chroots} ${chroot}"
					else
						unique_chroots="${chroot}"
					fi
					;;
				esac
			done
			;;
		esac
	fi

	case ${client} in
	*:*)
		port="-p ${client##*:}"
		client=${client%%:*}
		;;
	*)
		port=
		;;
	esac

	if [ -n "${unique_chroots}" ]; then
		ssh $port $client "${client_cleanup_chroot} ${unique_chroots}" &
	fi
done

#
# Handle the case where we want to cleanup chroots only on the local machine.
#
unique_chroots=
if [ -z "${scan_clients}" -a -n "${scan_chroots}" ]; then
	for chroot in ${scan_chroots}; do
		case ${unique_chroots} in
		"${chroot}" | "${chroot} "* | *" ${chroot} "* | *" ${chroot}" )
			: # exists already
			;;
		*)
			if [ -n "$unique_chroots" ]; then
				unique_chroots="${unique_chroots} ${chroot}"
			else
				unique_chroots="${chroot}"
			fi
			;;
		esac
	done
fi
if [ -z "${build_clients}" -a -n "${build_chroots}" ]; then
	for chroot in ${build_chroots}; do
		case ${unique_chroots} in
		"${chroot}" | "${chroot} "* | *" ${chroot} "* | *" ${chroot}" )
			: # exists already
			;;
		*)
			if [ -n "$unique_chroots" ]; then
				unique_chroots="${unique_chroots} ${chroot}"
			else
				unique_chroots="${chroot}"
			fi
			;;
		esac
	done
fi
if [ -n "${unique_chroots}" ]; then
	${client_cleanup_chroot} ${unique_chroots} &
fi

wait
